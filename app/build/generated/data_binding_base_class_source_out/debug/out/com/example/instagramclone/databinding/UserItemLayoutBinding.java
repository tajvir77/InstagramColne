// Generated by view binder compiler. Do not edit!
package com.example.instagramclone.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.instagramclone.R;
import de.hdodenhof.circleimageview.CircleImageView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class UserItemLayoutBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final Button followBtnSearch;

  @NonNull
  public final TextView userFullNameSearch;

  @NonNull
  public final TextView userNameSearch;

  @NonNull
  public final CircleImageView userProfileImageSearch;

  private UserItemLayoutBinding(@NonNull RelativeLayout rootView, @NonNull Button followBtnSearch,
      @NonNull TextView userFullNameSearch, @NonNull TextView userNameSearch,
      @NonNull CircleImageView userProfileImageSearch) {
    this.rootView = rootView;
    this.followBtnSearch = followBtnSearch;
    this.userFullNameSearch = userFullNameSearch;
    this.userNameSearch = userNameSearch;
    this.userProfileImageSearch = userProfileImageSearch;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static UserItemLayoutBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static UserItemLayoutBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.user_item_layout, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static UserItemLayoutBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.follow_btn_search;
      Button followBtnSearch = ViewBindings.findChildViewById(rootView, id);
      if (followBtnSearch == null) {
        break missingId;
      }

      id = R.id.user_full_name_search;
      TextView userFullNameSearch = ViewBindings.findChildViewById(rootView, id);
      if (userFullNameSearch == null) {
        break missingId;
      }

      id = R.id.user_name_search;
      TextView userNameSearch = ViewBindings.findChildViewById(rootView, id);
      if (userNameSearch == null) {
        break missingId;
      }

      id = R.id.user_profile_image_search;
      CircleImageView userProfileImageSearch = ViewBindings.findChildViewById(rootView, id);
      if (userProfileImageSearch == null) {
        break missingId;
      }

      return new UserItemLayoutBinding((RelativeLayout) rootView, followBtnSearch,
          userFullNameSearch, userNameSearch, userProfileImageSearch);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
